@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

/* Main application container */
body {
    margin: 0;
    overflow: hidden;
    font-size: 16px; /* Base font size for relative units */
}

#app {
    --block-size: 10vw; /* Default for desktop */
    --player-size: 80vw;
    --ground-size: 3vw;
    --pipe-size: 110vw;

    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    background: linear-gradient(to bottom, #87ceeb, #c3e2f5);
    background-size: 100% 100%;
}

/* Adjust for smaller screens (e.g., mobile phones) */
@media (max-width: 768px) {
    #app {
        --block-size: 10vw; /* Adjust for mobile screens */
        --player-size: 80vw;
        --ground-size: 14vw;
        --pipe-size: 80vw;

    }
}

/* Styles for the screens (main menu, game over) */
.screen {
    text-align: center;
    color: #fff;
    font-family: 'Press Start 2P', cursive;
    text-shadow: 3px 3px 0 #000;
    padding: var(--block-size);
    border-radius: calc(var(--block-size) / 4);
    background: rgba(0, 0, 0, 0.4);
    box-shadow: 0 0 calc(var(--block-size) / 2) rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    max-width: 90vw; /* Ensure screens don't overflow on small devices */
}

.screen h1 {
    font-size: calc(var(--block-size) * 0.8);
    margin-bottom: 0.5em;
    color: #ffeb3b;
    animation: bounce 1s infinite;
    white-space: nowrap; /* Prevents text from wrapping */
}

@keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

.screen p {
    font-size: calc(var(--block-size) / 3);
    margin-bottom: 2em;
}

#game-container {
    position: relative;
    width: 100vw;
    height: 100vh;
    display: none;
    overflow: hidden;
}

#player {
    width: var(--player-size);
    height: var(--player-size);
    transition: transform 0.1s ease-out;
}

#ground {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: calc(var(--ground-size) * 2);
    display: flex;
    align-items: center;
    background-color: #8B4513;
    z-index: 1;
}

#ground img {
    height: 100%;
    width: var(--block-size);
}

.pipe-group {
    position: absolute;
    z-index: 1;
}

.pipe {
    width: var(--pipe-size);
    position: absolute;
    background-image: url('https://raw.githubusercontent.com/samuelcust/flappy-bird-assets/master/sprites/pipe-green.png');
    background-size: cover;
}

.pipe.bottom {
    transform: scaleY(1);
}

.pipe.top {
    transform: rotate(180deg) scaleY(1);
}

/* Jump Button for mobile */
#Jump {
    position: fixed;
    bottom: calc(var(--block-size) * 0.5); /* Adjust position to be responsive */
    right: calc(var(--block-size) * 0.5);
    padding: calc(var(--block-size) / 2);
    font-size: calc(var(--block-size) / 3);
    font-family: 'Press Start 2P', cursive;
    background-color: #ffeb3b;
    border: 3px solid #000;
    border-radius: 50%;
    width: calc(var(--block-size) * 2.5);
    height: calc(var(--block-size) * 2.5);
    box-shadow: 5px 5px 0 #000;
    cursor: pointer;
    z-index: 10;
    display: flex;
    justify-content: center;
    align-items: center;
    line-height: 1;
    text-align: center;
    color: #2c3e50;
    transition: transform 0.1s ease-in-out, box-shadow 0.1s ease-in-out;
}

#Jump:active {
    box-shadow: 2px 2px 0 #000;
    transform: translateY(3px) translateX(3px);
}

/* Start and Play Again buttons */
#start-button, #play-again-button {
    background: #ffeb3b;
    color: #2c3e50;
    font-family: 'Press Start 2P', cursive;
    font-size: calc(var(--block-size) / 3);
    padding: calc(var(--block-size) / 4) calc(var(--block-size) / 2);
    border: 3px solid #000;
    border-radius: 10px;
    cursor: pointer;
    box-shadow: 5px 5px 0 #000;
    margin-top: calc(var(--block-size) / 2);
    transition: transform 0.1s ease-in-out, box-shadow 0.1s ease-in-out;
}

#start-button:active, #play-again-button:active {
    box-shadow: 2px 2px 0 #000;
    transform: translateY(3px) translateX(3px);
}

.score {
  font-size: calc(var(--block-size) * 0.8);
}